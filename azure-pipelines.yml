trigger:
  # branch names
- master
- develop

# Set variables once
variables:
  # use `latest-dev` in dev mode
  release_tag:          'latest-dev'
  release_title:        'Latest Development'
  release_notes_file:     './docs/source/version-history/dev.rst'
  # update the following in release mode
  # release_tag:          '2019a'
  # release_title:        '2019a Release'
  # release_notes_file:     './docs/source/version-history/v2019a.rst'

resources:
- repo:                 self


jobs:
- job:                macOS
  displayName:          Agent macOS

  condition:            succeeded()
  pool:
    vmImage:            'macOS-10.15'
  steps:
  # Use Python Version
  # Retrieves the specified version of Python from the tool cache. Optionally add it to PATH.
  - task:               UsePythonVersion@0
    inputs:
      versionSpec:      '3.7'
      addToPath:        true
      architecture:     'x64'


  - script:             'brew update; brew install gcc'
    displayName:        'install gcc+gfortran'
    continueOnError:    true

  - script:             |
      make release
      make test
    displayName:        'prepare release'
    continueOnError:    true

  - task:               GithubRelease@0
    inputs:
      gitHubConnection: new GitHub connection
      repositoryName:   UMEP-dev/SUEWS
      assets:           ./Release/*.zip
      action:           'Edit'
      target:           '$(build.sourceVersion)'
      tagSource:        'manual' # 'auto'
      tag:              $(release_tag) # Required when action == edit || action == discard || tagSource == manual
      title:            $(release_title)
      releaseNotesSource: file
      releaseNotesFile: $(release_notes_file)
      assetUploadMode:  'replace'
      isDraft:          true
      isPrerelease:     false
      addChangeLog:     false

  - task:               UsePythonVersion@0
    inputs:
      versionSpec:      '3.8'
      addToPath:        true
      architecture:     'x64'

  - script:             'make driver'
    displayName:        'make supy_driver'
    continueOnError:    true

  - task:               UsePythonVersion@0
    inputs:
      versionSpec:      '3.7'
      addToPath:        true
      architecture:     'x64'

  - script:             'make driver'
    displayName:        'make supy_driver'
    continueOnError:    true

  - task:               UsePythonVersion@0
    inputs:
      versionSpec:      '3.6'
      addToPath:        true
      architecture:     'x64'

  - script:             'make driver'
    displayName:        'make supy_driver'
    continueOnError:    true

  - task: TwineAuthenticate@0
    inputs:
      # artifactFeeds: 'feed_name1, feed_name2'
      externalFeeds: 'PyPI'

  - script:     |
      twine upload -r SuPy --config-file $(PYPIRC_PATH) --skip-existing supy-driver/dist/*whl
    displayName:        'upload supy_driver'
    continueOnError:    true


- job:                Windows
  displayName:          Agent Windows

  condition:            succeeded()
  pool:
    name:               Hosted VS2017

  steps:
  - task:               UsePythonVersion@0
    inputs:
      versionSpec:      '3.7'
      addToPath:        true
      architecture:     'x64'

  - bash:               |
       make release
    displayName:        'prepare release suews'
    failOnStderr:       false

  - task:               GithubRelease@0
    inputs:
      gitHubConnection: new GitHub connection
      repositoryName:   UMEP-dev/SUEWS
      assets:           ./Release/*.zip
      action:           'Edit'
      target:           '$(build.sourceVersion)'
      tagSource:        'manual' # 'auto'
      tag:              $(release_tag) # Required when action == edit || action == discard || tagSource == manual
      title:            $(release_title)
      assetUploadMode:  'replace'
      isDraft:          true
      isPrerelease:     false
      addChangeLog:     false

  - task:               UsePythonVersion@0
    inputs:
      versionSpec:      '3.8'
      addToPath:        true
      architecture:     'x64'

  - script:             'make driver'
    displayName:        'make supy_driver'
    continueOnError:    true

  - task:               UsePythonVersion@0
    inputs:
      versionSpec:      '3.7'
      addToPath:        true
      architecture:     'x64'

  - script:             'make driver'
    displayName:        'make supy_driver'
    continueOnError:    true

  - task:               UsePythonVersion@0
    inputs:
      versionSpec:      '3.6'
      addToPath:        true
      architecture:     'x64'

  - script:             'make driver'
    displayName:        'make supy_driver'
    continueOnError:    true


  - task: TwineAuthenticate@0
    inputs:
      # artifactFeeds: 'feed_name1, feed_name2'
      externalFeeds: 'PyPI'

  - script:  |
      twine upload -r SuPy --config-file $(PYPIRC_PATH) --skip-existing supy-driver/dist/*whl
    displayName:        'upload supy_driver'
    continueOnError:    true


- job:                Linux
  displayName:          Agent Linux

  condition:            succeeded()
  pool:
    name:               Hosted Ubuntu 1604
  steps:
  - task:               UsePythonVersion@0
    inputs:
      versionSpec:      '3.7'
      addToPath:        true
      architecture:     'x64'

  - script:             |
       sudo apt-get update
       sudo apt-get install build-essential gfortran
       gfortran --version
       gfortran-5 --version
    displayName:        'install gfortran'
    continueOnError:    true

  - script:             |
       make release
    displayName:        'prepare release'
    continueOnError:    true

  - task:               GithubRelease@0
    inputs:
      gitHubConnection: new GitHub connection
      repositoryName:   UMEP-dev/SUEWS
      assets:           ./Release/*.zip
      action:           'Edit'
      target:           '$(build.sourceVersion)'
      tagSource:        'manual' # 'auto'
      tag:              $(release_tag) # Required when action == edit || action == discard || tagSource == manual
      title:            $(release_title)
      assetUploadMode:  'replace'
      isDraft:          true
      isPrerelease:     false
      addChangeLog:     false

  - task: TwineAuthenticate@0
    inputs:
      # artifactFeeds: 'feed_name1, feed_name2'
      externalFeeds: 'PyPI'

  - script:  |
      pip install twine
      docker run -v $(pwd):/io dockcross/manylinux1-x64 bash -c "cd /io/supy-driver;gfortran --version; make clean;make suews"
      docker run -v $(pwd):/io dockcross/manylinux1-x64 bash -c "cd /io/supy-driver;/opt/python/cp36-cp36m/bin/python -m pip install -r requirements.txt; /opt/python/cp36-cp36m/bin/python -m pip install numpy==1.15.4; /opt/python/cp36-cp36m/bin/python setup.py bdist_wheel; ls -lrt *; ls -lrt dist/*; ls -lrt wheelhouse/*"
      docker run -v $(pwd):/io dockcross/manylinux1-x64 bash -c "cd /io/supy-driver;/opt/python/cp37-cp37m/bin/python -m pip install -r requirements.txt; /opt/python/cp37-cp37m/bin/python -m pip install numpy==1.15.4; /opt/python/cp37-cp37m/bin/python setup.py bdist_wheel; ls -lrt *; ls -lrt dist/*; ls -lrt wheelhouse/*"
      docker run -v $(pwd):/io dockcross/manylinux1-x64 bash -c "cd /io/supy-driver;/opt/python/cp38-cp38/bin/python -m pip install -r requirements.txt; /opt/python/cp38-cp38/bin/python -m pip install numpy==1.15.4; /opt/python/cp38-cp38/bin/python setup.py bdist_wheel; ls -lrt *; ls -lrt dist/*; ls -lrt wheelhouse/*"
      docker run -v $(pwd):/io dockcross/manylinux1-x64 bash -c "cd /io/supy-driver;/opt/python/cp39-cp39/bin/python -m pip install -r requirements.txt; /opt/python/cp39-cp39/bin/python -m pip install numpy==1.15.4; /opt/python/cp39-cp39/bin/python setup.py bdist_wheel; ls -lrt *; ls -lrt dist/*; ls -lrt wheelhouse/*"
      cd supy-driver
      twine upload -r SuPy --config-file $(PYPIRC_PATH) --skip-existing wheelhouse/*whl
    displayName:        'manylinux supy_driver build and upload'
    continueOnError:    true
