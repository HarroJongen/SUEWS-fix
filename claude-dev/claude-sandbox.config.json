{
  "containerName": "suews-claude-dev",
  "dockerImage": "suews-claude-dev:latest",
  "ports": ["8888:8888"],
  "mounts": [
    {
      "source": "~/.ssh",
      "destination": "/tmp/.ssh",
      "type": "bind"
    },
    {
      "source": "~/.gitconfig",
      "destination": "/tmp/.gitconfig",
      "type": "bind"
    },
    {
      "source": "~/.claude",
      "destination": "/home/claude/.claude",
      "type": "bind"
    }
  ],
  "env": {
    "SUEWS_DEV_HOME": "/workspace/SUEWS"
  },

  "containerPrefix": "suews-research",

  "autoStartClaude": true,
  "detached": false,
  "allowedTools": ["*"],

  "maxThinkingTokens": 150000,
  "bashTimeout": 900000,

  "autoPush": false,
  "autoCreatePR": false,

  "setupCommands": [
    "echo 'üöÄ Initialising SUEWS development environment...'",
    "echo 'Working directory: '$(pwd)",
    "echo 'Available space: '$(df -h . | tail -1 | awk '{print $4}')",

    "echo 'üì¶ Verifying SUEWS repository structure...'",
    "if [ ! -d 'src/suews' ]; then echo '‚ùå SUEWS source not found'; exit 1; fi",
    "if [ ! -d 'test' ]; then echo '‚ùå Test directory not found'; exit 1; fi",
    "echo '‚úÖ SUEWS repository structure verified'",

    "echo 'üì¶ Initialising git submodules...'",
    "git submodule update --init --recursive",

    "echo 'üõ†Ô∏è  Verifying key build tool versions...'",
    "echo -n '  - gfortran: ' && gfortran --version | head -n1",
    "echo -n '  - gcc:      ' && gcc --version | head -n1",
    "echo -n '  - python:   ' && conda run -n suews-dev python --version",

    "echo ''",
    "echo '‚ÑπÔ∏è  Git Status:'",
    "git status -bs",
    "echo ''",

    "echo 'üéâ SUEWS development environment ready!'",
    "echo 'To build the model, run:       conda run -n suews-dev make dev'",
    "echo 'To run tests, run:              conda run -n suews-dev make test'",
    "echo 'To build documentation, run:    make docs'",
    "echo ''",
    "echo 'üìã Sandbox Guidelines:'",
    "echo '  Personal instructions: ~/.claude/CLAUDE.md'",
    "echo '  Remember to create semantic branch names!'",
    "echo ''",
    "echo 'üîê Git Authentication:'",
    "echo '  Recommended: Run \"gh auth login\" for GitHub authentication'",
    "echo '  Alternative: Use SSH agent forwarding (see README)'",
    "echo ''"
  ],

  "runArgs": [
    "--cpus", "6",
    "--memory", "12g",
    "--shm-size", "2g",
    "--pids-limit", "1024",
    "--ulimit", "nofile=65536:65536"
  ],

  "volumes": [],

  "comment": "SSH authentication via 'gh auth login' or SSH agent forwarding",
  "sshAgentForwarding": false,

  "includeUntracked": false,
  "gitConfig": {
    "preserveHistory": false
  }
}