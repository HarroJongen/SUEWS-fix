FROM ubuntu:22.04

# Prevent interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies (base claude-sandbox + SUEWS requirements)
RUN apt-get update && apt-get install -y \
    curl \
    git \
    openssh-client \
    python3 \
    python3-pip \
    build-essential \
    sudo \
    vim \
    jq \
    ca-certificates \
    gnupg \
    software-properties-common \
    && add-apt-repository ppa:ubuntu-toolchain-r/test \
    && apt-get update && apt-get install -y \
    # SUEWS-specific additions
    gfortran-13 \
    gcc-13 \
    g++-13 \
    cmake \
    ninja-build \
    pkg-config \
    libopenmpi-dev \
    libhdf5-dev \
    libnetcdf-dev \
    libfftw3-dev \
    libblas-dev \
    liblapack-dev \
    git-lfs \
    wget \
    tmux \
    htop \
    tree \
    doxygen \
    graphviz \
    pandoc \
    && rm -rf /var/lib/apt/lists/*

# Set the newer compiler as the default
RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 100 && \
    update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-13 100 && \
    update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-13 100

# Install Node.js 20.x
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs

# Install GitHub CLI
RUN curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
    && chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
    && apt-get update \
    && apt-get install -y gh

# Install Claude Code
RUN npm install -g @anthropic-ai/claude-code@latest

# Install Miniforge for modern Python environment management
RUN ARCH=$(uname -m) && \
    if [ "$ARCH" = "aarch64" ]; then INSTALLER="Miniforge3-Linux-aarch64.sh"; else INSTALLER="Miniforge3-Linux-x86_64.sh"; fi && \
    curl -Ls "https://github.com/conda-forge/miniforge/releases/latest/download/${INSTALLER}" -o miniforge.sh && \
    bash miniforge.sh -b -p /opt/conda && \
    rm miniforge.sh && \
    /opt/conda/bin/conda init bash

# Set up conda environment path
ENV PATH=/opt/conda/bin:$PATH

SHELL ["/bin/bash", "-c"]

# Create SUEWS Python environment with all required packages
RUN source /opt/conda/etc/profile.d/conda.sh && \
    mamba create -n suews-dev -c conda-forge -y \
        python=3.12 \
        pip \
        meson-python \
        numpy \
        scipy \
        pandas \
        matplotlib \
        jupyter \
        pytest \
        pytest-cov \
        geopandas \
        rtree \
        openpyxl \
        pytables \
        psutil \
        f90nml \
        click \
        pydantic \
        ipykernel \
        jupyter_client \
        jupyter_core \
        ruff \
        scikit-learn \
        scikit-image \
    && mamba clean -a -y

# Install pip-only packages in the suews-dev environment
RUN source /opt/conda/etc/profile.d/conda.sh && \
    conda activate suews-dev && \
    pip install \
        f90wrap==0.2.16 \
        atmosp \
        sphinx \
        sphinx-autobuild \
        sphinx-book-theme \
        sphinxcontrib.bibtex \
        nbsphinx

# Create workspace directory
RUN mkdir -p /workspace
WORKDIR /workspace

# Set SUEWS environment variables
ENV SUEWS_DEV_HOME=/workspace/SUEWS

# Create a wrapper script for git that prevents branch switching
RUN echo -e '#!/bin/bash\n\
# Allow the initial branch creation\n\
if [ ! -f /tmp/.branch-created ]; then\n\
    /usr/bin/git.real "$@"\n\
    if [[ "$1" == "checkout" ]] && [[ "$2" == "-b" ]]; then\n\
        touch /tmp/.branch-created\n\
    fi\n\
else\n\
    # After initial branch creation, prevent switching\n\
    if [[ "$1" == "checkout" ]] && [[ "$2" != "-b" ]] && [[ "$*" != *"--"* ]]; then\n\
        echo "Error: Branch switching is disabled in claude-code-sandbox"\n\
        echo "You can only create new branches with git checkout -b"\n\
        exit 1\n\
    fi\n\
    if [[ "$1" == "switch" ]]; then\n\
        echo "Error: Branch switching is disabled in claude-code-sandbox"\n\
        exit 1\n\
    fi\n\
    /usr/bin/git.real "$@"\n\
fi' > /usr/local/bin/git-wrapper && \
    chmod +x /usr/local/bin/git-wrapper && \
    mv /usr/bin/git /usr/bin/git.real && \
    ln -s /usr/local/bin/git-wrapper /usr/bin/git

# Set up SSH config
RUN mkdir -p /root/.ssh && \
    echo "Host github.com\n\
    StrictHostKeyChecking no\n\
    UserKnownHostsFile /dev/null" > /root/.ssh/config && \
    chmod 600 /root/.ssh/config

# Set git to use credential helper
RUN git config --global credential.helper 'cache --timeout=3600'

# Create activation script for SUEWS environment
RUN echo -e '#!/bin/bash\n\
source /opt/conda/etc/profile.d/conda.sh\n\
conda activate suews-dev\n\
export SUEWS_DEV_HOME=/workspace/SUEWS\n\
cd $SUEWS_DEV_HOME 2>/dev/null || cd /workspace\n\
echo "SUEWS development environment activated"\n\
echo "Python: $(python --version)"\n\
echo "gfortran: $(gfortran --version | head -n1)"\n\
echo "Available commands:"\n\
echo "  make dev     - Build SUEWS (development)"\n\
echo "  make test    - Run tests"\n\
echo "  make docs    - Build documentation"\n\
echo "  make clean   - Clean build artifacts"\n\
' > /usr/local/bin/activate-suews && \
    chmod +x /usr/local/bin/activate-suews

# Set up bash environment to auto-activate SUEWS environment
RUN echo 'source /opt/conda/etc/profile.d/conda.sh' >> /root/.bashrc && \
    echo 'conda activate suews-dev 2>/dev/null || true' >> /root/.bashrc && \
    echo 'export SUEWS_DEV_HOME=/workspace/SUEWS' >> /root/.bashrc && \
    echo 'alias ll="ls -la"' >> /root/.bashrc && \
    echo 'alias la="ls -A"' >> /root/.bashrc

# Create activation script for non-interactive shells
RUN echo '#!/bin/bash' > /etc/profile.d/suews-dev.sh && \
    echo 'source /opt/conda/etc/profile.d/conda.sh' >> /etc/profile.d/suews-dev.sh && \
    echo 'conda activate suews-dev 2>/dev/null || true' >> /etc/profile.d/suews-dev.sh && \
    echo 'export SUEWS_DEV_HOME=/workspace/SUEWS' >> /etc/profile.d/suews-dev.sh && \
    chmod +x /etc/profile.d/suews-dev.sh

# Set BASH_ENV to source activation script in non-interactive shells
ENV BASH_ENV=/etc/profile.d/suews-dev.sh

# Create entrypoint script
RUN echo -e '#!/bin/bash\n\
set -e\n\
\n\
# Copy SSH keys if mounted\n\
if [ -d "/tmp/.ssh" ]; then\n\
    cp -r /tmp/.ssh/* /root/.ssh/ 2>/dev/null || true\n\
    chmod 600 /root/.ssh/* 2>/dev/null || true\n\
fi\n\
\n\
# Copy git config if mounted\n\
if [ -f "/tmp/.gitconfig" ]; then\n\
    cp /tmp/.gitconfig /root/.gitconfig\n\
fi\n\
\n\
# Activate SUEWS environment\n\
source /opt/conda/etc/profile.d/conda.sh\n\
conda activate suews-dev 2>/dev/null || true\n\
\n\
# Execute the command\n\
exec "$@"' > /entrypoint.sh && \
    chmod +x /entrypoint.sh

# Health check to verify gfortran and Python environment
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD /bin/bash -c 'source /opt/conda/etc/profile.d/conda.sh && conda activate suews-dev && gfortran --version && python --version' || exit 1

ENTRYPOINT ["/entrypoint.sh"]
CMD ["bash"]