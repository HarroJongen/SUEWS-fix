name: Schema Management (Streamlined)

# This streamlined workflow automatically generates, commits, and deploys schemas
# when data models change. No PRs, no waiting, just automatic updates.

on:
  push:
    branches: [master]
    paths:
      - 'src/supy/data_model/**'
      - '.github/scripts/generate_schema.py'
      - '.github/workflows/schema-management-streamlined.yml'
  
  pull_request:
    paths:
      - 'schemas/**'  # Detect manual edits
      - 'src/supy/data_model/**'
      - '.github/scripts/generate_schema.py'

  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write

jobs:
  # Job 1: Validate PRs only (no generation, no deployment)
  validate-pr:
    name: Validate PR
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check for manual schema edits
        run: |
          # Get changed files
          SCHEMA_CHANGES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep '^schemas/' || true)
          
          if [ -n "$SCHEMA_CHANGES" ]; then
            MODEL_CHANGES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep '^src/supy/data_model/' || true)
            
            if [ -z "$MODEL_CHANGES" ]; then
              echo "❌ ERROR: Manual schema edits detected!"
              echo "Schemas are auto-generated. Never edit them manually."
              echo "To update schemas, modify files in src/supy/data_model/"
              exit 1
            fi
            echo "✅ Schema changes detected alongside data model changes"
          else
            echo "✅ No schema changes in this PR"
          fi

  # Job 2: Generate, commit, and deploy (master only)
  update-and-deploy:
    name: Update Schemas and Deploy
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      # Checkout with token that can push
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      # Setup Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      
      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pydantic pyyaml numpy pandas pytz timezonefinder f90nml packaging
      
      # Generate schemas
      - name: Generate schemas
        run: |
          echo "🔧 Generating schemas..."
          python .github/scripts/generate_schema.py
          echo "✅ Schema generation complete"
      
      # Commit if changed (directly to master)
      - name: Commit schema changes
        id: commit
        run: |
          if ! git diff --quiet schemas/; then
            echo "📝 Schema changes detected, committing..."
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add schemas/
            git commit -m "chore: Update auto-generated schemas [skip ci]
            
            Triggered by: ${{ github.sha }}
            AUTO-GENERATED - DO NOT EDIT"
            git push
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "✅ Changes committed to master"
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "ℹ️ No schema changes needed"
          fi
      
      # Setup GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      # Prepare deployment (always deploy, even if no changes)
      - name: Prepare deployment
        run: |
          echo "📦 Preparing deployment..."
          mkdir -p _site
          
          # Copy schemas if they exist
          if [ -d schemas ]; then
            cp -r schemas _site/
            echo "✅ Schemas copied"
          else
            mkdir -p _site/schemas
            echo '{"error": "No schemas generated yet"}' > _site/schemas/error.json
            echo "⚠️ No schemas found, using placeholder"
          fi
          
          # Copy landing page
          if [ -f .github/pages/index.html ]; then
            cp .github/pages/index.html _site/index.html
            echo "✅ Landing page copied"
          else
            # Simple fallback
            cat > _site/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>SUEWS Schema</title>
              <meta charset="utf-8">
              <style>
                body { font-family: system-ui; max-width: 800px; margin: 50px auto; padding: 20px; }
                h1 { color: #333; }
                a { color: #0366d6; }
              </style>
          </head>
          <body>
              <h1>SUEWS Configuration Schema</h1>
              <p><a href="schemas/suews-config/">View Schemas</a></p>
              <p>Community: <a href="https://github.com/UMEP-dev/umep/discussions">UMEP Discussions</a></p>
          </body>
          </html>
          EOF
            echo "✅ Fallback landing page created"
          fi
          
          # Add .nojekyll
          touch _site/.nojekyll
          
          echo "✅ Deployment prepared"
          ls -la _site/
      
      # Upload artifact
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site
      
      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Job 3: Manual trigger workflow dispatch
  manual-update:
    name: Manual Update and Deploy
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      # Reuse the same steps as update-and-deploy
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      
      - run: |
          python -m pip install --upgrade pip
          pip install pydantic pyyaml numpy pandas pytz timezonefinder f90nml packaging
      
      - run: python .github/scripts/generate_schema.py
      
      - name: Commit if changed
        run: |
          if ! git diff --quiet schemas/; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add schemas/
            git commit -m "chore: Update schemas (manual trigger) [skip ci]"
            git push
          fi
      
      - uses: actions/configure-pages@v5
      
      - name: Prepare and deploy
        run: |
          mkdir -p _site
          [ -d schemas ] && cp -r schemas _site/ || mkdir -p _site/schemas
          [ -f .github/pages/index.html ] && cp .github/pages/index.html _site/index.html
          touch _site/.nojekyll
      
      - uses: actions/upload-pages-artifact@v3
        with:
          path: _site
      
      - uses: actions/deploy-pages@v4