name: Publish Configuration Schema

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags
    branches:
      - master
    paths:
      - 'src/supy/data_model/**'
      - 'src/supy/util/schema_publisher.py'
  workflow_dispatch:  # Manual trigger

jobs:
  publish-schema:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pydantic jsonschema pyyaml
        pip install -e .
    
    - name: Determine schema version
      id: version
      run: |
        if [[ "${{ github.ref }}" == refs/tags/* ]]; then
          # For tags, check if schema version needs update
          VERSION="${{ github.ref_name }}"
        else
          # For branches, use current schema version
          VERSION=$(python -c "from src.supy.data_model._schema_version import CURRENT_SCHEMA_VERSION; print(CURRENT_SCHEMA_VERSION)")
        fi
        echo "schema_version=$VERSION" >> $GITHUB_OUTPUT
    
    - name: Generate schema bundle
      run: |
        python -m supy.util.schema_publisher bundle ./schemas --version ${{ steps.version.outputs.schema_version }}
    
    - name: Generate latest symlink
      run: |
        cd schemas
        ln -sf v${{ steps.version.outputs.schema_version }} latest
    
    - name: Commit schema files
      if: github.ref == 'refs/heads/master'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add schemas/
        git diff --cached --quiet || git commit -m "chore: Update schema files for v${{ steps.version.outputs.schema_version }}"
    
    - name: Push changes
      if: github.ref == 'refs/heads/master'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}
    
    - name: Upload schema artifacts
      uses: actions/upload-artifact@v3
      with:
        name: schema-v${{ steps.version.outputs.schema_version }}
        path: schemas/v${{ steps.version.outputs.schema_version }}/
    
    - name: Create GitHub Release (for tags)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          schemas/v${{ steps.version.outputs.schema_version }}/schema.json
          schemas/v${{ steps.version.outputs.schema_version }}/schema.yaml
          schemas/v${{ steps.version.outputs.schema_version }}/README.md
        body: |
          ## Configuration Schema v${{ steps.version.outputs.schema_version }}
          
          This release includes the JSON Schema for SUEWS YAML configuration files.
          
          ### Usage
          - Download `schema.json` for validation tools
          - Use `schema.yaml` for human-readable format
          - See `README.md` for integration instructions
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}