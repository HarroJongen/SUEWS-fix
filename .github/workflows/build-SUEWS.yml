name: build and check

on:

  # File paths to consider in the event. Optional; defaults to all
  push:
    # branches:    # Array of patterns that match refs/heads
    #   - master     # Push events on master branch
    #   - test-dev
  #     - 'releases/*' # Push events to branches matching refs/heads/releases/*
  #     - '!refs/pull/*'
  #   tags:        # Array of patterns that match refs/tags.
  #     - v1         # Push events to v1 tag
    paths:       # Push events containing matching files
      - 'SUEWS-SourceCode/*'
      - 'supy-driver/*'
      - '.github/workflows/build-SUEWS.yml'

jobs:

  linux:

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v1
      with:
        submodules: true
        token: ${{ secrets.PAT }}

    # - name: show version
    #   run: |
    #     bin_gfortran=$(which gfortran-10)
    #     ln -sf $bin_gfortran "$(dirname "$bin_gfortran")"/gfortran
    #     gfortran --version

    - name: Setup Python for use with actions
      uses: actions/setup-python@v2
      with:
        python-version: '3.7' # Version range or exact version of a Python version to use, using semvers version range syntax.
        architecture: 'x64' # (x64 or x86)

    - name: build and test
      run: |
        gfortran --version
        make release

    - name: set py3.7
      uses: actions/setup-python@v2
      with:
        python-version: '3.7' # Version range or exact version of a Python version to use, using semvers version range syntax.
        architecture: 'x64' # (x64 or x86)

    - name: build supy-driver
      run: |
        make driver
        ls -lrt supy-driver/dist/

  manylinux:

    runs-on: ubuntu-latest

    steps:

    - name: manylinux build
      run: |
        docker run -v $(pwd):/io dockcross/manylinux1-x64 bash -c "cd /io/supy-driver;gfortran --version; make clean;make suews"
        docker run -v $(pwd):/io dockcross/manylinux1-x64 bash -c "cd /io/supy-driver;/opt/python/cp36-cp36m/bin/python -m pip install -r requirements.txt; /opt/python/cp36-cp36m/bin/python -m pip install numpy==1.15.4; /opt/python/cp36-cp36m/bin/python setup.py bdist_wheel; ls -lrt *; ls -lrt dist/*; ls -lrt wheelhouse/*"
        docker run -v $(pwd):/io dockcross/manylinux1-x64 bash -c "cd /io/supy-driver;/opt/python/cp37-cp37m/bin/python -m pip install -r requirements.txt; /opt/python/cp37-cp37m/bin/python -m pip install numpy==1.15.4; /opt/python/cp37-cp37m/bin/python setup.py bdist_wheel; ls -lrt *; ls -lrt dist/*; ls -lrt wheelhouse/*"
        docker run -v $(pwd):/io dockcross/manylinux1-x64 bash -c "cd /io/supy-driver;/opt/python/cp38-cp38/bin/python -m pip install -r requirements.txt; /opt/python/cp38-cp38/bin/python -m pip install numpy==1.15.4; /opt/python/cp38-cp38/bin/python setup.py bdist_wheel; ls -lrt *; ls -lrt dist/*; ls -lrt wheelhouse/*"
        docker run -v $(pwd):/io dockcross/manylinux1-x64 bash -c "cd /io/supy-driver;/opt/python/cp39-cp39/bin/python -m pip install -r requirements.txt; /opt/python/cp39-cp39/bin/python -m pip install numpy==1.15.4; /opt/python/cp39-cp39/bin/python setup.py bdist_wheel; ls -lrt *; ls -lrt dist/*; ls -lrt wheelhouse/*"

    - name: Store the binary wheel
      uses: actions/upload-artifact@v2
      with:
        name: python-package-distributions
        path: supy-driver/wheelhouse/




  mac:

    runs-on: macos-latest

    steps:

    - uses: actions/checkout@v1
      with:
        submodules: true
        token: ${{ secrets.PAT }}

    - name: Setup Python for use with actions
      uses: actions/setup-python@v2
      with:
        python-version: '3.7' # Version range or exact version of a Python version to use, using semvers version range syntax.
        architecture: 'x64' # (x64 or x86)

    - name: fix gfortran
      run: |
        brew reinstall gcc
        which gfortran
        gfortran --version

    - name: build and test
      run: |
        make release
        make test

    # - name: Upload diff results from test
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: diff csv
    #     path: Test/BaseRun/**/*diff.csv

    - name: set up py3.7
      uses: actions/setup-python@v2
      with:
        python-version: '3.7' # Version range or exact version of a Python version to use, using semvers version range syntax.
        architecture: 'x64' # (x64 or x86)

    - name: build supy-driver
      run: |
        make driver
        ls -lrt supy-driver/dist/

    - name: set up py3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8' # Version range or exact version of a Python version to use, using semvers version range syntax.
        architecture: 'x64' # (x64 or x86)

    - name: build supy-driver
      run: |
        make driver
        ls -lrt supy-driver/dist/

    - name: set up py3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9' # Version range or exact version of a Python version to use, using semvers version range syntax.
        architecture: 'x64' # (x64 or x86)

    - name: build supy-driver
      run: |
        make driver
        ls -lrt supy-driver/dist/

    - name: Store the binary wheel
      uses: actions/upload-artifact@v2
      with:
        name: python-package-distributions
        path: supy-driver/dist/


  windows:

    runs-on: windows-latest

    steps:

    - uses: actions/checkout@v1
      with:
        submodules: true
        token: ${{ secrets.PAT }}

    - name: Setup Python for use with actions
      uses: actions/setup-python@v2
      with:
        python-version: '3.7' # Version range or exact version of a Python version to use, using semvers version range syntax.
        architecture: 'x64' # (x64 or x86)

    - name: build and pack as release
      run: |
        make release

    - name: set py3.7
      uses: actions/setup-python@v2
      with:
        python-version: '3.7' # Version range or exact version of a Python version to use, using semvers version range syntax.
        architecture: 'x64' # (x64 or x86)

    - name: build supy-driver
      run: |
        make driver

    - name: set py3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8' # Version range or exact version of a Python version to use, using semvers version range syntax.
        architecture: 'x64' # (x64 or x86)

    - name: build supy-driver
      run: |
        make driver

    - name: build supy-driver
      run: |
        make driver

    - name: set py3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9' # Version range or exact version of a Python version to use, using semvers version range syntax.
        architecture: 'x64' # (x64 or x86)

    - name: build supy-driver
      run: |
        make driver

    - name: Store the binary wheel
      uses: actions/upload-artifact@v2
      with:
        name: python-package-distributions
        path: supy-driver/dist/

  deploy:
    name: Publish 🐍📦 to (Test)PyPI
    needs:
    - mac
    - windows  # transitive, for accessing settings
    - manylinux
    # if: >-
    #   fromJSON(needs.pre-setup.outputs.is_untagged_devel) ||
    #   fromJSON(needs.pre-setup.outputs.is_tagged)
    runs-on: ubuntu-latest

    steps:

    - name: Download all the dists
      uses: actions/download-artifact@v2
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish distribution 📦 to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        packages_dir: dist/
        verbose: true
        skip_existing: true
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/

    - name: Publish distribution 📦 to PyPI
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        packages_dir: dist/
        verbose: true
        skip_existing: true
        password: ${{ secrets.PYPI_API_TOKEN }}