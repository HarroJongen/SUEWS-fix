name: build and check

on:

  # File paths to consider in the event. Optional; defaults to all
  push:
    # branches:    # Array of patterns that match refs/heads
    #   - master     # Push events on master branch
    #   - test-dev
  #     - 'releases/*' # Push events to branches matching refs/heads/releases/*
  #     - '!refs/pull/*'
  #   tags:        # Array of patterns that match refs/tags.
  #     - v1         # Push events to v1 tag
    paths:       # Push events containing matching files
      - 'SUEWS-SourceCode/*'
      - 'supy-driver/*'
      - '.github/workflows/build-SUEWS.yml'

jobs:

  # linux:

  #   needs:
  #   - test

  #   runs-on: ubuntu-latest

  #   steps:

  #   - uses: actions/checkout@v1
  #     with:
  #       submodules: true
  #       token: ${{ secrets.PAT }}

  #   # - name: show version
  #   #   run: |
  #   #     bin_gfortran=$(which gfortran-10)
  #   #     ln -sf $bin_gfortran "$(dirname "$bin_gfortran")"/gfortran
  #   #     gfortran --version

  #   - name: Setup Python for use with actions
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: '3.7' # Version range or exact version of a Python version to use, using semvers version range syntax.
  #       architecture: 'x64' # (x64 or x86)

  #   - name: build and test
  #     run: |
  #       gfortran --version
  #       make release

  manylinux:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        manylinux-python-target:
        # NOTE: Must be from this list:
        # NOTE: $ docker run -it --rm \
        # NOTE:   quay.io/pypa/manylinux1_x86_64 \
        # NOTE:   ls -1 /opt/python
        - cp39-cp39
        - cp38-cp38
        - cp37-cp37m
        - cp36-cp36m

    steps:

    - uses: actions/checkout@v1
      with:
        submodules: true
        token: ${{ secrets.PAT }}

    - name: build for ${{ matrix.manylinux-python-target }}
      run: |
        docker run -v $(pwd):/io dockcross/manylinux1-x64 bash -c \
        "cd /io/supy-driver;gfortran --version; make suews"
        docker run -v $(pwd):/io dockcross/manylinux1-x64 bash -c \
        "cd /io/supy-driver;\
        /opt/python/${{ matrix.manylinux-python-target }}/bin/python -m pip install -r requirements.txt;\
        /opt/python/${{ matrix.manylinux-python-target }}/bin/python -m pip install numpy==1.15.4;\
        /opt/python/${{ matrix.manylinux-python-target }}/bin/python setup.py bdist_wheel; \
        ls -lrt *; \
        ls -lrt dist/*; \
        ls -lrt wheelhouse/*"

    - name: Store ${{ matrix.manylinux-python-target }} binary wheel
      uses: actions/upload-artifact@v2
      with:
        name: python-package-distributions
        path: supy-driver/wheelhouse/

  mac:

    runs-on: macos-latest

    strategy:
      matrix:
        py:
        - 3.9
        - 3.8
        - 3.7
        - 3.6

    steps:

    - uses: actions/checkout@v1
      with:
        submodules: true
        token: ${{ secrets.PAT }}

    - name: set up py${{ matrix.py }}
      uses: actions/setup-python@v2
      with:
        python-version: '{{ matrix.py }}' # Version range or exact version of a Python version to use, using semvers version range syntax.
        architecture: 'x64' # (x64 or x86)

    - name: build supy-driver
      run: |
        make driver
        ls -lrt supy-driver/dist/

    - name: Store the ${{ matrix.py }} wheel
      uses: actions/upload-artifact@v2
      with:
        name: python-package-distributions
        path: supy-driver/dist/


  # test:

  #   runs-on: macos-latest

  #   steps:

  #   - uses: actions/checkout@v1
  #     with:
  #       submodules: true
  #       token: ${{ secrets.PAT }}

  #   - name: Setup Python for use with actions
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: '3.7' # Version range or exact version of a Python version to use, using semvers version range syntax.
  #       architecture: 'x64' # (x64 or x86)

  #   - name: fix gfortran
  #     run: |
  #       brew reinstall gcc
  #       which gfortran
  #       gfortran --version

  #   - name: build and test
  #     run: |
  #       make release
  #       make test

    # - name: Upload diff results from test
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: diff csv
    #     path: Test/BaseRun/**/*diff.csv




  # windows:

  #   runs-on: windows-latest

  #   steps:

  #   - uses: actions/checkout@v1
  #     with:
  #       submodules: true
  #       token: ${{ secrets.PAT }}

  #   - name: Setup Python for use with actions
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: '3.7' # Version range or exact version of a Python version to use, using semvers version range syntax.
  #       architecture: 'x64' # (x64 or x86)

  #   - name: build and pack as release
  #     run: |
  #       make release

  #   - name: set py3.7
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: '3.7' # Version range or exact version of a Python version to use, using semvers version range syntax.
  #       architecture: 'x64' # (x64 or x86)

  #   - name: build supy-driver
  #     run: |
  #       make driver

  #   - name: set py3.8
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: '3.8' # Version range or exact version of a Python version to use, using semvers version range syntax.
  #       architecture: 'x64' # (x64 or x86)

  #   - name: build supy-driver
  #     run: |
  #       make driver

  #   - name: build supy-driver
  #     run: |
  #       make driver

  #   - name: set py3.9
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: '3.9' # Version range or exact version of a Python version to use, using semvers version range syntax.
  #       architecture: 'x64' # (x64 or x86)

  #   - name: build supy-driver
  #     run: |
  #       make driver

  #   - name: Store the binary wheel
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: python-package-distributions
  #       path: supy-driver/dist/

  deploy:
    name: Publish 🐍📦 to (Test)PyPI
    needs:
    - mac
    - windows  # transitive, for accessing settings
    - manylinux
    # if: >-
    #   fromJSON(needs.pre-setup.outputs.is_untagged_devel) ||
    #   fromJSON(needs.pre-setup.outputs.is_tagged)
    runs-on: ubuntu-latest

    steps:

    - name: Download all the dists
      uses: actions/download-artifact@v2
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish distribution 📦 to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        packages_dir: dist/
        verbose: true
        skip_existing: true
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/

    - name: Publish distribution 📦 to PyPI
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        packages_dir: dist/
        verbose: true
        skip_existing: true
        password: ${{ secrets.PYPI_API_TOKEN }}