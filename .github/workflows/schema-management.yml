name: Schema Management

# Generates and deploys schemas when data models change
# Creates PRs for version control (required due to branch protection)

on:
  push:
    branches: [master]
    paths:
      - 'src/supy/data_model/**'
      - '.github/scripts/generate_schema.py'
      - '.github/workflows/schema-management.yml'
  
  pull_request:
    paths:
      - 'src/supy/data_model/**'
      - '.github/scripts/generate_schema.py'

  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write

jobs:
  # Generate schemas and deploy immediately
  generate-deploy:
    name: Generate and Deploy
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      
      - run: |
          python -m pip install --upgrade pip
          pip install pydantic pyyaml numpy pandas pytz timezonefinder f90nml packaging
      
      # Generate schemas
      - name: Generate schemas
        run: python .github/scripts/generate_schema.py
      
      # Deploy to GitHub Pages immediately
      - name: Deploy to Pages
        run: |
          mkdir -p _site
          cp -r schemas _site/
          [ -f .github/pages/index.html ] && cp .github/pages/index.html _site/index.html
          touch _site/.nojekyll
      
      - uses: actions/configure-pages@v5
      - uses: actions/upload-pages-artifact@v3
        with:
          path: _site
      - uses: actions/deploy-pages@v4
        id: deployment
      
      # Create PR for version control (due to branch protection)
      - name: Create PR if schemas changed
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if ! git diff --quiet schemas/; then
            BRANCH="auto/schemas-$(date +%Y%m%d-%H%M%S)"
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git checkout -b "$BRANCH"
            git add schemas/
            git commit -m "chore: Update schemas [auto-generated]"
            git push origin "$BRANCH"
            
            gh pr create \
              --base master \
              --head "$BRANCH" \
              --title "ü§ñ Update schemas" \
              --body "Auto-generated schema update. Already deployed to GitHub Pages."
          fi

  # Validate PRs
  validate:
    name: Validate
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      
      - run: |
          python -m pip install --upgrade pip
          pip install pydantic pyyaml numpy pandas pytz timezonefinder f90nml packaging
      
      - name: Test schema generation
        run: |
          python .github/scripts/generate_schema.py
          echo "‚úÖ Schema generation successful"

  # Preview deployment for PRs (especially workflow changes)
  preview:
    name: Deploy Preview
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: validate
    
    environment:
      name: github-pages-preview
      url: ${{ steps.deployment.outputs.page_url }}
    
    permissions:
      pages: write
      id-token: write
      pull-requests: write
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      
      - run: |
          python -m pip install --upgrade pip
          pip install pydantic pyyaml numpy pandas pytz timezonefinder f90nml packaging
      
      - name: Generate schemas
        run: python .github/scripts/generate_schema.py
      
      - name: Prepare preview deployment
        run: |
          mkdir -p _site
          cp -r schemas _site/
          
          # Add preview banner to index
          if [ -f .github/pages/index.html ]; then
            # Insert preview banner into existing index
            cat .github/pages/index.html | sed '/<body>/a\
          <div style="background: #ffeb3b; color: #333; padding: 10px; text-align: center; font-weight: bold;">‚ö†Ô∏è PREVIEW - PR #${{ github.event.pull_request.number }} - Not Production</div>' > _site/index.html
          else
            cat > _site/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>SUEWS Schema - PREVIEW</title>
              <meta charset="utf-8">
              <style>
                body { font-family: system-ui; max-width: 800px; margin: 0 auto; padding: 20px; }
                .preview-banner { background: #ffeb3b; color: #333; padding: 15px; text-align: center; font-weight: bold; margin: -20px -20px 20px -20px; }
              </style>
          </head>
          <body>
              <div class="preview-banner">‚ö†Ô∏è PREVIEW - PR #${{ github.event.pull_request.number }} - Not Production</div>
              <h1>SUEWS Configuration Schema</h1>
              <p><a href="schemas/suews-config/">View Schemas</a></p>
              <p>Community: <a href="https://github.com/UMEP-dev/umep/discussions">UMEP Discussions</a></p>
          </body>
          </html>
          EOF
          fi
          
          touch _site/.nojekyll
      
      - uses: actions/configure-pages@v5
      - uses: actions/upload-pages-artifact@v3
        with:
          path: _site
      - uses: actions/deploy-pages@v4
        id: deployment
      
      - name: Comment preview URL
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `üîç **Preview Deployed**\n\nPreview URL: ${{ steps.deployment.outputs.page_url }}\n\n‚ö†Ô∏è This is a preview deployment for testing changes.`
            })